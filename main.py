import os
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv("BOT_TOKEN") 
bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_lang = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = InlineKeyboardMarkup(row_width=2)
    btn1 = InlineKeyboardButton("“ö–∞–∑–∞“õ—à–∞ üá∞üáø", callback_data="lang_kz")
    btn2 = InlineKeyboardButton("–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data="lang_ru")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, "–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose a language:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@bot.callback_query_handler(func=lambda call: call.data in ["lang_kz", "lang_ru"])
def handle_language_selection(call):
    lang = call.data.split("_")[1]  # "kz" –∏–ª–∏ "ru"
    user_lang[call.message.chat.id] = lang

    if lang == "ru":
        bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫. –ö—Ç–æ –≤—ã?", reply_markup=role_keyboard("ru"))
    else:
        bot.send_message(call.message.chat.id, "–°—ñ–∑ “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω —Ç–∞“£–¥–∞–¥—ã“£—ã–∑. –°—ñ–∑ –∫—ñ–º—Å—ñ–∑?", reply_markup=role_keyboard("kz"))

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ä–æ–ª—è–º–∏
def role_keyboard(lang):
    markup = InlineKeyboardMarkup(row_width=1)
    if lang == "ru":
        markup.add(
            InlineKeyboardButton("–°–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞", callback_data="role_creator"),
            InlineKeyboardButton("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", callback_data="role_teacher"),
            InlineKeyboardButton("–ñ—é—Ä–∏", callback_data="role_jury")
        )
    else:
        markup.add(
            InlineKeyboardButton("–ñ–æ–±–∞ –∞–≤—Ç–æ—Ä—ã", callback_data="role_creator"),
            InlineKeyboardButton("–ú“±“ì–∞–ª—ñ–º", callback_data="role_teacher"),
            InlineKeyboardButton("“ö–∞–∑—ã–ª–∞—Ä", callback_data="role_jury")
        )
    return markup

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
@bot.callback_query_handler(func=lambda call: call.data.startswith("role_"))
def handle_role_selection(call):
    role = call.data.split("_")[1]
    lang = user_lang.get(call.message.chat.id, "ru")

    if lang == "ru":
        if role == "creator":
            bot.send_message(call.message.chat.id, "üîç –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞, —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –µ–≥–æ –Ω–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏.")
        elif role == "teacher":
            bot.send_message(call.message.chat.id, "üìö –Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ö–æ–¥–µ–∫—Å–∞—Ö –†–ö –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è.")
        elif role == "jury":
            bot.send_message(call.message.chat.id, "üßë‚Äç‚öñÔ∏è –Ø –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º.")
    else:
        if role == "creator":
            bot.send_message(call.message.chat.id, "üîç –ñ–æ–±–∞–Ω—ã —Å–∏–ø–∞—Ç—Ç–∞“£—ã–∑, –º–µ–Ω –æ–Ω—ã “õ“±“õ—ã“õ—Ç—ã“õ —Ç”ô—É–µ–∫–µ–ª–¥–µ—Ä–≥–µ —Ç–∞–ª–¥–∞–π–º—ã–Ω.")
        elif role == "teacher":
            bot.send_message(call.message.chat.id, "üìö –ú–µ–Ω “ö–† –∫–æ–¥–µ–∫—Å—Ç–µ—Ä—ñ–º–µ–Ω –∂“±–º—ã—Å —ñ—Å—Ç–µ—É–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–µ–º—ñ–Ω.")
        elif role == "jury":
            bot.send_message(call.message.chat.id, "üßë‚Äç‚öñÔ∏è –ú–µ–Ω –∂–æ–±–∞–ª–∞—Ä“ì–∞ “õ–æ—è—Ç—ã–Ω “õ“±“õ—ã“õ—Ç—ã“õ —Å“±—Ä–∞“õ—Ç–∞—Ä–¥—ã “±—Å—ã–Ω–∞–º—ã–Ω.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
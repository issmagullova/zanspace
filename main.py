import os
from flask import Flask, request
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

app = Flask(__name__)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —è–∑—ã–∫–æ–≤ –∏ —Ä–æ–ª–µ–π
user_lang = {}
user_role = {}

# –ì–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(commands=["start"])
def send_welcome(message):
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(
        InlineKeyboardButton("“ö–∞–∑–∞“õ—à–∞ üá∞üáø", callback_data="lang_kz"),
        InlineKeyboardButton("–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data="lang_ru")
    )
    bot.send_message(message.chat.id, "–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose a language:", reply_markup=markup)

# –í—ã–±–æ—Ä —è–∑—ã–∫–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith("lang_"))
def handle_language(call):
    lang = call.data.split("_")[1]
    user_lang[call.from_user.id] = lang
    if lang == "ru":
        msg = "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫. –ö—Ç–æ –≤—ã?"
        markup = InlineKeyboardMarkup()
        markup.add(
            InlineKeyboardButton("–°–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞", callback_data="role_creator"),
            InlineKeyboardButton("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", callback_data="role_teacher"),
            InlineKeyboardButton("–ñ—é—Ä–∏", callback_data="role_jury")
        )
    else:
        msg = "–°—ñ–∑ “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω —Ç–∞“£–¥–∞–¥—ã“£—ã–∑. –°—ñ–∑ –∫—ñ–º—Å—ñ–∑?"
        markup = InlineKeyboardMarkup()
        markup.add(
            InlineKeyboardButton("–ñ–æ–±–∞ –∞–≤—Ç–æ—Ä—ã", callback_data="role_creator"),
            InlineKeyboardButton("–ú“±“ì–∞–ª—ñ–º", callback_data="role_teacher"),
            InlineKeyboardButton("“ö–∞–∑—ã–ª–∞—Ä", callback_data="role_jury")
        )
    bot.edit_message_text(msg, call.message.chat.id, call.message.message_id, reply_markup=markup)

# –í—ã–±–æ—Ä —Ä–æ–ª–∏
@bot.callback_query_handler(func=lambda call: call.data.startswith("role_"))
def handle_role(call):
    role = call.data.split("_")[1]
    lang = user_lang.get(call.from_user.id, "ru")
    user_role[call.from_user.id] = role

    if lang == "ru":
        if role == "creator":
            bot.send_message(call.message.chat.id, "üß† –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ—ë–º –ø—Ä–æ–µ–∫—Ç–µ, –∏ —è –ø–æ–¥—Å–∫–∞–∂—É –ø—Ä–∞–≤–æ–≤—ã–µ —Ä–∏—Å–∫–∏!")
        elif role == "teacher":
            bot.send_message(call.message.chat.id, "üìö –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ö–æ–¥–µ–∫—Å–∞—Ö –†–ö –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è.")
        elif role == "jury":
            bot.send_message(call.message.chat.id, "‚öñÔ∏è –Ø –ø–æ–º–æ–≥—É –∑–∞–¥–∞—Ç—å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞–º.")
    else:
        if role == "creator":
            bot.send_message(call.message.chat.id, "üß† –ñ–æ–±–∞“£—ã–∑–¥—ã —Å–∏–ø–∞—Ç—Ç–∞“£—ã–∑, –º–µ–Ω –∑–∞“£–¥—ã“õ —Ç”ô—É–µ–∫–µ–ª–¥–µ—Ä–¥—ñ –∞–π—Ç–∞–º—ã–Ω!")
        elif role == "teacher":
            bot.send_message(call.message.chat.id, "üìö –ú–µ–Ω –æ“õ—ã—Ç—É “Ø—à—ñ–Ω “ö–† –∫–æ–¥–µ–∫—Å—Ç–µ—Ä—ñ–Ω —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä—É–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–µ–º—ñ–Ω.")
        elif role == "jury":
            bot.send_message(call.message.chat.id, "‚öñÔ∏è –ú–µ–Ω “õ–∞—Ç—ã—Å—É—à—ã–ª–∞—Ä“ì–∞ “õ–æ—è—Ç—ã–Ω –∑–∞“£ —Å“±—Ä–∞“õ—Ç–∞—Ä—ã–Ω “±—Å—ã–Ω–∞–º—ã–Ω.")

# Webhook
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    json_str = request.get_data().decode("utf-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "!", 200

# Flask run
if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/{TOKEN}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))